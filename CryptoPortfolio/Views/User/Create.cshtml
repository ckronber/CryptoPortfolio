@model CryptoPortfolio.Models.UserAdd

@{
    ViewBag.Title = "Create";
}

<h2 class="">Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserAdd</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TradeMoney, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TradeMoney, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TradeMoney, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Currency" id="model.Currency" class="form-control">
                    <option>USD</option>
                    <option>JPY</option>
                    <option>EUR</option>
                    <option>CNY</option>
                    <option>KRW</option>
                    <option>INR</option>
                    <option>CAD</option>
                    <option>HKD</option>
                    <option>AUD</option>
                </select>
               @*@Html.EditorFor(model => model.Currency, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreferredExchange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="PreferredExchange" id="model.PreferredExchange" class="form-control">
                    <option>Binance</option>
                    <option>Huobi</option>
                    <option>Coinbase</option>
                    <option>PrimeXBT</option>
                    <option>Coinsmart</option>
                    <option>Gemini</option>
                    <option>Coinmama</option>
                    <option>Changelly</option>
                    <option>Poloniex</option>
                    <option>Paybis</option>
                    <option>Overbit</option>
                    <option>Club Swan</option>
                    <option>KuCoin</option>
                    <option>Switchere</option>
                    <option>BitHash</option>
                </select>
                @*@Html.EditorFor(model => model.PreferredExchange, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.PreferredExchange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
